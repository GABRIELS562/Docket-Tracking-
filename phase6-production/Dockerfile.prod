# Production Dockerfile for RFID Docket Tracking System
# Multi-stage build for optimized production image

# Build Stage
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Install build dependencies
RUN apk add --no-cache python3 make g++ curl

# Copy package files
COPY package*.json ./
COPY tsconfig.json ./

# Install dependencies (including dev dependencies for build)
RUN npm ci --only=production --silent

# Copy source code
COPY src/ ./src/

# Build TypeScript to JavaScript
RUN npm run build

# Production Stage
FROM node:18-alpine AS production

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nodejs -u 1001

# Set working directory
WORKDIR /app

# Install production dependencies only
COPY package*.json ./
RUN npm ci --only=production --silent && npm cache clean --force

# Install PM2 for process management
RUN npm install -g pm2

# Copy built application from builder stage
COPY --from=builder /app/dist ./dist

# Copy configuration files
COPY --chown=nodejs:nodejs ecosystem.config.js ./
COPY --chown=nodejs:nodejs .env.production ./.env

# Create necessary directories
RUN mkdir -p logs uploads temp && chown -R nodejs:nodejs logs uploads temp

# Install curl for health checks
RUN apk add --no-cache curl

# Switch to non-root user
USER nodejs

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD curl -f http://localhost:3000/health || exit 1

# Start application with PM2
CMD ["pm2-runtime", "start", "ecosystem.config.js"]