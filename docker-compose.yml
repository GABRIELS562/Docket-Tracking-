version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: rfid_postgres
    environment:
      POSTGRES_DB: rfid_documents
      POSTGRES_USER: rfid_user
      POSTGRES_PASSWORD: rfid_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rfid_user -d rfid_documents"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API (for development)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: rfid_backend
    environment:
      DATABASE_URL: postgresql://rfid_user:rfid_password@postgres:5432/rfid_documents
      JWT_SECRET: dev-secret-key-change-in-production
      NODE_ENV: development
      PORT: 3000
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    command: npm run dev

  # Frontend (for development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: rfid_frontend
    environment:
      REACT_APP_API_URL: http://localhost:3000/api
      REACT_APP_WS_URL: ws://localhost:3000
    ports:
      - "3001:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    command: npm start

  # Redis (optional - for development/testing)
  redis:
    image: redis:7-alpine
    container_name: rfid_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: rfid_network